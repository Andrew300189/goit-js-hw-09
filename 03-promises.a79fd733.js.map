{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAgDaC,SAASC,cAAc,SAC/BC,iBAAiB,UAlCtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAMC,EAAOF,EAAMG,OACbC,EAAeC,SAASH,EAAKI,SAASC,MAAMC,OAC5CC,EAAOJ,SAASH,EAAKI,SAASG,KAAKD,OACnCE,EAASL,SAASH,EAAKI,SAASI,OAAOF,OAE7C,GAAIC,GAAQ,GAAKF,OAAS,GAAKG,GAAU,EACvCC,EAAAhB,GAASiB,OAAOC,QAAQ,4DAD1B,CAKAC,QAAQC,QAER,IAAMC,EAAWC,MAAMC,KAAK,CAAEC,OAAQT,IAAU,SAACU,EAAGC,GAGlD,OA/BJ,SAAuBC,EAAUf,GAC/B,IAAMgB,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEL,WAAUf,UAEpBqB,EAAO,CAAEN,WAAUf,S,GAEpBA,E,IAsBIuB,CAFUT,EAAI,EACPjB,EAAeiB,EAAIZ,GACKsB,MACpC,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUW,EAAKD,EAALzB,MACXI,EAAAhB,GAASiB,OAAOsB,QAAQ,uBAAwCC,OAAfb,EAAS,QAAYa,OAANF,EAAM,M,IAExE,SAAAD,G,IAAGV,EAAQU,EAARV,SAAUW,EAAKD,EAALzB,MACXI,EAAAhB,GAASiB,OAAOC,QAAQ,sBAAqCsB,OAAfb,EAAS,QAAYa,OAANF,EAAM,M,OAKzEP,QAAQU,IAAIpB,GAAUe,MAAK,WACzBpB,EAAAhB,GAASiB,OAAOyB,KAAM,sC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const form = event.target;\n  const initialDelay = parseInt(form.elements.delay.value);\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n\n  if (step <= 0 || delay <= 0 || amount <= 0) {\n    Notiflix.Notify.failure('Step, delay, and amount should be greater than zero.');\n    return;\n  }\n\n  console.clear();\n\n  const promises = Array.from({ length: amount }, (_, i) => {\n    const position = i + 1;\n    const delay = initialDelay + i * step;\n    return createPromise(position, delay).then(\n      ({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      },\n      ({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    );\n  });\n\n  Promise.all(promises).then(() => {\n    Notiflix.Notify.info(`All promises resolved successfully.`);\n  });\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","event","preventDefault","form1","target","initialDelay","parseInt","elements","delay","value","step","amount","$parcel$interopDefault","Notify","failure","console","clear","promises","Array","from","length","_","i","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","param","_$delay","success","concat","all","info"],"version":3,"file":"03-promises.a79fd733.js.map"}